{"ast":null,"code":"import { AuthorizationGuard } from './comun/guards/authorization.guard';\nimport { RouterModule } from '@angular/router';\nimport { CallbackOauth2Component } from './comun/callback-oauth2/callback-oauth2.component';\nimport { MenuUsuarioComponent } from './submenus/menu-usuario/menu-usuario.component';\nimport { MenuPaisComponent } from './submenus/menu-pais/menu-pais.component';\nimport { ConsultaEAIaduanasComponent } from './consulta-eaiaduanas/consulta-eaiaduanas.component';\nimport { MenuTransaccionesAduanerasComponent } from './submenus/menu-transacciones-aduaneras/menu-transacciones-aduaneras.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [\n/**\n * Carga la opcion del submódulo de paises en modo peresozo, es decir hasta que se invoca la ruta\n */\n{\n  path: 'menu-pais',\n  component: MenuPaisComponent,\n  canActivate: [AuthorizationGuard],\n  children: [{\n    path: '',\n    loadChildren: () => import('./paises/paises.module').then(m => m.PaisesModule)\n  }]\n},\n/**\n * Carga la opcion del submódulo de usuarios en modo peresozo, es decir hasta que se invoca la ruta\n */\n{\n  path: 'menu-usuario',\n  component: MenuUsuarioComponent,\n  canActivate: [AuthorizationGuard],\n  children: [{\n    path: '',\n    loadChildren: () => import('./users/users.module').then(m => m.UsersModule)\n  }]\n}, {\n  path: 'consulta-eaiaduanas',\n  component: ConsultaEAIaduanasComponent,\n  canActivate: [AuthorizationGuard],\n  children: [{\n    path: '',\n    loadChildren: () => import('./users/users.module').then(m => m.UsersModule)\n  }]\n}, {\n  path: 'menu-transacciones-aduaneras',\n  component: MenuTransaccionesAduanerasComponent,\n  canActivate: [AuthorizationGuard],\n  children: [{\n    path: '',\n    loadChildren: () => import('./aduanas/aduanas.module').then(m => m.AduanasModule)\n  }]\n},\n/**\n * Componente de retorno una vez se tenga respuesta del servidor de autorización\n */\n{\n  path: 'callback',\n  component: CallbackOauth2Component\n},\n/**\n * Rutas que no coincidan o sin ruta se redirige a la ruta raíz\n */\n{\n  path: '',\n  pathMatch: 'full',\n  redirectTo: '/'\n}, {\n  path: '**',\n  pathMatch: 'full',\n  redirectTo: '/'\n}];\nexport let AppRoutingModule = /*#__PURE__*/(() => {\n  class AppRoutingModule {\n    static {\n      this.ɵfac = function AppRoutingModule_Factory(t) {\n        return new (t || AppRoutingModule)();\n      };\n    }\n    static {\n      this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n        type: AppRoutingModule\n      });\n    }\n    static {\n      this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n        imports: [RouterModule.forRoot(routes), RouterModule]\n      });\n    }\n  }\n  return AppRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}