{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../api-users.service\";\nimport * as i4 from \"src/app/comun/dialogs/message/message.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/divider\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/form-field\";\nconst _c0 = [\"resetUsuarioForm\"];\nfunction CruUsersComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Debe ingresar \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"nombre de usuario\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CruUsersComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" No es posible ingresar menos de \", ctx_r2.usuarioForm.controls[\"name\"].errors == null ? null : ctx_r2.usuarioForm.controls[\"name\"].errors.minlength[\"requiredLength\"], \" caracteres \");\n  }\n}\nfunction CruUsersComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" No es posible ingresar m\\u00E1s de \", ctx_r3.usuarioForm.controls[\"name\"].errors == null ? null : ctx_r3.usuarioForm.controls[\"name\"].errors.maxlength[\"requiredLength\"], \" caracteres \");\n  }\n}\nfunction CruUsersComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Debe ingresar \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"E-mail\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CruUsersComponent_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" No es posible ingresar menos de \", ctx_r5.usuarioForm.controls[\"email\"].errors == null ? null : ctx_r5.usuarioForm.controls[\"email\"].errors.minlength[\"requiredLength\"], \" caracteres \");\n  }\n}\nfunction CruUsersComponent_mat_error_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" No es posible ingresar m\\u00E1s de \", ctx_r6.usuarioForm.controls[\"email\"].errors == null ? null : ctx_r6.usuarioForm.controls[\"email\"].errors.maxlength[\"requiredLength\"], \" caracteres \");\n  }\n}\nfunction CruUsersComponent_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Correo electr\\u00F3nico no v\\u00E1lido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CruUsersComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-card\")(2, \"div\", 10)(3, \"div\", 11)(4, \"button\", 12);\n    i0.ɵɵtext(5, \"Guardar\");\n    i0.ɵɵelementEnd()()()()();\n  }\n}\nfunction CruUsersComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-card\")(2, \"div\", 10)(3, \"div\", 11)(4, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function CruUsersComponent_div_22_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.backList());\n    });\n    i0.ɵɵtext(5, \"Regresar\");\n    i0.ɵɵelementEnd()()()()();\n  }\n}\nexport let CruUsersComponent = /*#__PURE__*/(() => {\n  class CruUsersComponent {\n    ngOnInit() {\n      this.refreshForm();\n    }\n    /* Carga inicial */\n    constructor(fb, router, ngZone, actRoute, usuarioApi, messageService) {\n      this.fb = fb;\n      this.router = router;\n      this.ngZone = ngZone;\n      this.actRoute = actRoute;\n      this.usuarioApi = usuarioApi;\n      this.messageService = messageService;\n      this.mod = \"\";\n      this.titulo = \"\";\n      /* Obtiene los errores */\n      this.handleError = (controlName, errorName) => {\n        return this.usuarioForm.controls[controlName].hasError(errorName);\n      };\n      /** Modo de acceso view, edit, add en base a la ruta */\n      this.mod = this.actRoute.snapshot.url[0].path.split(\"-\")[0];\n      this.detTitle();\n      /* Si trae el id en el parametro obtiene sus datos */\n      var id = this.actRoute.snapshot.paramMap.get('id');\n      if (id !== null) {\n        this.usuarioApi.getUsuario(parseInt(id)).subscribe(data => {\n          this.usuarioForm = this.fb.group({\n            id: [data.body.id],\n            name: [{\n              value: data.body.name,\n              disabled: this.mod === 'view'\n            }, [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n            email: [{\n              value: data.body.email,\n              disabled: this.mod === 'view'\n            }, [Validators.required, Validators.email, Validators.minLength(5), Validators.maxLength(60)]]\n          });\n        });\n      }\n    }\n    /* Inicializar */\n    refreshForm() {\n      this.usuarioForm = this.fb.group({\n        name: [{\n          value: '',\n          disabled: this.mod === 'view'\n        }, [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n        email: [{\n          value: '',\n          disabled: this.mod === 'view'\n        }, [Validators.required, Validators.email, Validators.minLength(5), Validators.maxLength(60)]]\n      });\n    }\n    /* Guardar */\n    saveForm() {\n      if (this.mod === \"add\") {\n        this.submitUsuarioForm();\n      } else if (this.mod === \"edit\") {\n        this.updateUsuarioForm();\n      }\n    }\n    /* Ingresar usuario */\n    submitUsuarioForm() {\n      if (this.usuarioForm.valid) {\n        this.usuarioApi.addUsuario(this.usuarioForm.value).subscribe(res => {\n          this.messageService.openDialog(\"Aviso\", \"Usuario guardado exitosamente\");\n          this.myNgForm.resetForm();\n        });\n      }\n    }\n    /* Actualizar usuario */\n    updateUsuarioForm() {\n      if (this.usuarioForm.valid) {\n        this.usuarioApi.updateUsuario(this.usuarioForm.value).subscribe(res => {\n          this.messageService.openDialog(\"Aviso\", \"Usuario actualizado exitosamente\");\n          this.ngZone.run(() => this.router.navigateByUrl('/menu-usuario/list-usuario'));\n        });\n      }\n    }\n    /* Volver a listado de usuarios */\n    backList() {\n      this.ngZone.run(() => this.router.navigateByUrl('/menu-usuario/list-usuario'));\n    }\n    /** Definicion de titulo */\n    detTitle() {\n      /** Titulo en pantalla */\n      if (this.mod === \"view\") {\n        this.titulo = \"Consultar\";\n      } else if (this.mod === \"edit\") {\n        this.titulo = \"Editar\";\n      } else if (this.mod === \"add\") {\n        this.titulo = \"Agregar\";\n      }\n    }\n    static {\n      this.ɵfac = function CruUsersComponent_Factory(t) {\n        return new (t || CruUsersComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.ApiUsersService), i0.ɵɵdirectiveInject(i4.MessageService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: CruUsersComponent,\n        selectors: [[\"app-cru-users\"]],\n        viewQuery: function CruUsersComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.myNgForm = _t.first);\n          }\n        },\n        decls: 23,\n        vars: 11,\n        consts: [[1, \"title-group\"], [1, \"mat-h1\"], [\"fxFlex\", \"1 0\"], [1, \"inner-wrapper\"], [\"novalidate\", \"\", \"autocomplete\", \"off\", 3, \"formGroup\", \"ngSubmit\"], [\"resetUsuarioForm\", \"ngForm\"], [1, \"controlers-wrapper\"], [\"matInput\", \"\", \"placeholder\", \"Nombre completo\", \"formControlName\", \"name\", \"oninput\", \"this.value=this.value.toUpperCase();this.value=this.value.replace(/[\\\\(|\\\\*|\\\\/|\\\\&|\\\\%|\\\\#|\\\\$|\\\\)|,]/,'');\"], [4, \"ngIf\"], [\"matInput\", \"\", \"placeholder\", \"E-mail\", \"formControlName\", \"email\", \"oninput\", \"this.value=this.value.replace(/[\\\\(|\\\\*|\\\\/|\\\\&|\\\\%|\\\\#|\\\\$|\\\\)|,]/,'');\"], [1, \"full-wrapper\", \"button-wrapper\"], [1, \"button-wrapper\"], [\"mat-flat-button\", \"\", \"color\", \"warn\"], [\"mat-flat-button\", \"\", \"color\", \"warn\", 3, \"click\"]],\n        template: function CruUsersComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n            i0.ɵɵtext(2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(3, \"mat-divider\", 2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"div\", 3)(5, \"form\", 4, 5);\n            i0.ɵɵlistener(\"ngSubmit\", function CruUsersComponent_Template_form_ngSubmit_5_listener() {\n              return ctx.saveForm();\n            });\n            i0.ɵɵelementStart(7, \"mat-card\")(8, \"div\", 6)(9, \"mat-form-field\");\n            i0.ɵɵelement(10, \"input\", 7);\n            i0.ɵɵtemplate(11, CruUsersComponent_mat_error_11_Template, 4, 0, \"mat-error\", 8);\n            i0.ɵɵtemplate(12, CruUsersComponent_mat_error_12_Template, 2, 1, \"mat-error\", 8);\n            i0.ɵɵtemplate(13, CruUsersComponent_mat_error_13_Template, 2, 1, \"mat-error\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(14, \"br\");\n            i0.ɵɵelementStart(15, \"mat-form-field\");\n            i0.ɵɵelement(16, \"input\", 9);\n            i0.ɵɵtemplate(17, CruUsersComponent_mat_error_17_Template, 4, 0, \"mat-error\", 8);\n            i0.ɵɵtemplate(18, CruUsersComponent_mat_error_18_Template, 2, 1, \"mat-error\", 8);\n            i0.ɵɵtemplate(19, CruUsersComponent_mat_error_19_Template, 2, 1, \"mat-error\", 8);\n            i0.ɵɵtemplate(20, CruUsersComponent_mat_error_20_Template, 2, 0, \"mat-error\", 8);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵtemplate(21, CruUsersComponent_div_21_Template, 6, 0, \"div\", 8);\n            i0.ɵɵtemplate(22, CruUsersComponent_div_22_Template, 6, 0, \"div\", 8);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate1(\"\", ctx.titulo, \" usuario\");\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"formGroup\", ctx.usuarioForm);\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"ngIf\", ctx.handleError(\"name\", \"required\"));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.handleError(\"name\", \"minlength\"));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.handleError(\"name\", \"maxlength\"));\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", ctx.handleError(\"email\", \"required\"));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.handleError(\"email\", \"minlength\"));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.handleError(\"email\", \"maxlength\"));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.handleError(\"email\", \"email\"));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.mod !== \"view\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.mod === \"view\");\n          }\n        },\n        dependencies: [i5.NgIf, i6.MatButton, i7.MatDivider, i8.MatInput, i9.MatFormField, i9.MatError, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        encapsulation: 2\n      });\n    }\n  }\n  return CruUsersComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}