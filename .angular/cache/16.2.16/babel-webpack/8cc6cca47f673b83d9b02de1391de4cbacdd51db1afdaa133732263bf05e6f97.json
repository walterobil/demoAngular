{"ast":null,"code":"import { MessageComponent } from './message.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/router\";\nexport let MessageService = /*#__PURE__*/(() => {\n  class MessageService {\n    constructor(dialog, router, ngZone) {\n      this.dialog = dialog;\n      this.router = router;\n      this.ngZone = ngZone;\n      this.opened = false;\n    }\n    openDialog(title, message, errorRes, status) {\n      if (!this.opened) {\n        this.opened = true;\n        const dialogRef = this.dialog.open(MessageComponent, {\n          data: {\n            title,\n            message,\n            errorRes,\n            status\n          },\n          /*maxHeight: \"100%\",\n          width: \"540px\",\n          maxWidth: \"100%\",*/\n          disableClose: true,\n          hasBackdrop: true\n        });\n        dialogRef.afterClosed().subscribe(() => {\n          this.opened = false;\n          /**\n           * Navega hacia otra ruta para activar el guard y validar si tiene token de acceso\n           */\n          if (errorRes && errorRes.developerMessage && errorRes.developerMessage === \"invalid_token\") {\n            window.location.href = window.location.href;\n          }\n        });\n      }\n    }\n    static {\n      this.ɵfac = function MessageService_Factory(t) {\n        return new (t || MessageService)(i0.ɵɵinject(i1.MatDialog), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: MessageService,\n        factory: MessageService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return MessageService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}