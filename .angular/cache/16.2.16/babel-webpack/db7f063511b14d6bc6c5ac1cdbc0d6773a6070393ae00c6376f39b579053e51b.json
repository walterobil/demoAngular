{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nconst ENDPOINT = environment.API_URL_SEC + '/tokens';\nexport let AuthorizationGuard = /*#__PURE__*/(() => {\n  class AuthorizationGuard {\n    canActivate(route, state) {\n      /**\n       * Redirecciona hacia el servicio de seguridad para iniciar el flujo de consentimiento y obtener un token de acceso\n       */\n      if (environment.seguridad && !localStorage.getItem('accessToken')) {\n        /**\n         * Guarda la la ruta de la pagina a la que se quiere acceder y el tipo de guard\n         */\n        let tempState = state.url.split(\"?\")[0];\n        localStorage.setItem('pageRedirect', tempState);\n        localStorage.setItem('guard', 'Authorization');\n        /**\n         * Obtiene la ruta de retorno al proyecto, la ruta callback corresponde al componente callback-oauth2\n         * Esta se envia como parametro al servicio de seguridad para que posteriormente pueda redireccionar\n         * nuevamente hacia el proyecto\n         */\n        let tempUrl = window.location.href.split('?')[0];\n        let indexOf = tempUrl.indexOf(tempState);\n        if (indexOf > 0) {\n          tempUrl = tempUrl.substr(0, indexOf);\n        }\n        tempUrl = tempUrl + '/callback';\n        tempUrl = tempUrl.replace('//callback', '/callback');\n        window.location.href = ENDPOINT + '?uri=' + tempUrl;\n        return false;\n      }\n      /**\n       * Si ya tiene token de acceso continua hacia la pantalla solicitada\n       */else {\n        return true;\n      }\n    }\n    canActivateChild(childRoute, state) {\n      return this.canActivate(childRoute, state);\n    }\n    static {\n      this.ɵfac = function AuthorizationGuard_Factory(t) {\n        return new (t || AuthorizationGuard)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthorizationGuard,\n        factory: AuthorizationGuard.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthorizationGuard;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}